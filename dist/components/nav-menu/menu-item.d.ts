import '../icon/index.js';
import '../popup-menu/index.js';
import { Component } from '../Component.js';
import { BlocksPopupMenu } from '../popup-menu/index.js';
import type { BlocksNavMenu } from './menu.js';
export declare class BlocksNavMenuItem extends Component {
    #private;
    static get observedAttributes(): string[];
    private $layout;
    private $label;
    private $icon;
    private $arrow;
    private _leaveTimer?;
    private _enterTimer?;
    private _data;
    accessor expand: boolean;
    accessor active: boolean;
    accessor disabled: boolean;
    accessor link: boolean;
    constructor();
    get $hostMenu(): BlocksNavMenu;
    set $hostMenu($menu: BlocksNavMenu);
    get $submenu(): BlocksNavMenu | BlocksPopupMenu | undefined;
    set $submenu($menu: BlocksNavMenu | BlocksPopupMenu | undefined);
    get $parentMenu(): BlocksNavMenu | undefined;
    set $parentMenu($menu: BlocksNavMenu | undefined);
    get $rootMenu(): BlocksNavMenu;
    get isInlineMode(): boolean;
    get isCollapseMode(): boolean;
    get hasSubmenu(): boolean;
    get data(): MenuItem;
    set data(value: MenuItem);
    render(): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    attributeChangedCallback(attrName: string, oldValue: any, newValue: any): void;
    clearEnterTimer(): void;
    clearLeaveTimer(): void;
    clearActive(): void;
}
