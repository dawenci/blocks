import type { WeekNumber, DecadeModel, YearModel, MonthModel, DayModel, ItemModel, MaybeLeafModel, MaybeLeafDepth } from './type.js';
import { Depth } from './type.js';
export declare const Depths: readonly [Depth.Month, Depth.Year, Depth.Decade, Depth.Century];
export declare const LeafDepths: readonly [Depth.Month, Depth.Year, Depth.Decade];
export declare const DepthValue: Readonly<{
    century: 0;
    decade: 1;
    year: 2;
    month: 3;
}>;
export declare function normalizeMinDepth(min: Depth, depth: MaybeLeafDepth): Depth;
export declare function normalizeActiveDepth(view: Depth, min: Depth, depth: MaybeLeafDepth): Depth;
export declare function maybeLeafModel(model: ItemModel): model is MaybeLeafModel;
export declare function isDecadeModel(model: ItemModel): model is DecadeModel;
export declare function isYearModel(model: ItemModel): model is YearModel;
export declare function isMonthModel(model: ItemModel): model is MonthModel;
export declare function isDayModel(model: ItemModel): model is DayModel;
export declare function generateDates(century: number, decade: number, year: number, month: number, startWeekOn: number): DayModel[];
export declare function generateMonths(century: number, decade: number, year: number): MonthModel[];
export declare function generateYears(century: number, decade: number): YearModel[];
export declare function generateDecades(century: number): DecadeModel[];
export declare function makeDate(year: number, month?: number, date?: number): Date;
export declare function normalizeNumber(value: any): number | null;
export declare function yearToDecade(year: number): number;
export declare function yearToCentury(year: number): number;
export declare function decadeToCentury(decade: number): number;
export declare function isYearInDecade(year: number, decade: number): boolean;
export declare function isYearInCentury(year: number, century: number): boolean;
export declare function firstYearOfDecade(decade: number): number;
export declare function lastYearOfDecade(decade: number): number;
export declare function firstYearOfCentury(century: number): number;
export declare function lastYearOfCentury(century: number): number;
export declare function generateWeekHeaders(startWeekOn: WeekNumber): string[];
export declare function isToday(model: ItemModel): boolean;
export declare function isAllEqual(arr1: Array<Date>, arr2: Array<Date>): boolean;
export declare function modelToDate(model: ItemModel, viewDepth: Depth): Date;
export declare function dateToModel(dateObj: Date, depth: Depth): ItemModel;
export declare function getClosestDate(dates?: Date[]): Date | null;
